trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Define variables for ACR and image tag
  acrName: 'webacr7'
  imageName: 'shopping-website'
  tag: 'v1'
  azureSubscription: '979f5139-37ae-4a1d-a8ca-ae8eed910ec9'  # Update this with your Azure RM service connection name

steps:
# Step 1: Checkout code from the repository
- checkout: self  # This checks out the code from the repository

# Step 2: Log in to Azure Container Registry (ACR)
- task: AzureCLI@2
  inputs:
    azureSubscription: '$(azureSubscription)'  # Use the Azure RM service connection
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az acr login --name $(acrName)

# Step 3: Build the Docker image
- script: |
    docker build -t $(acrName).azurecr.io/$(imageName):$(tag) .
  displayName: 'Build Docker Image'
  continueOnError: false  # Ensure the pipeline fails on build errors

# Step 4: Push the Docker image to ACR
- script: |
    docker push $(acrName).azurecr.io/$(imageName):$(tag)
  displayName: 'Push Docker Image to ACR'
  continueOnError: false  # Ensure the pipeline fails if push fails

